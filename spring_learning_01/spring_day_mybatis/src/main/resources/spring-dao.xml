<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
<!-- datasource： 使用spring的数据源替换mybatis的配置 c3p0  dbcp druid
 我们这里使用spring提供的jdbc-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="jdbc:mysql://localhost:3306/smbms?useSSL=false"></property>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="username" value="root"></property>
        <property name="password" value="123456"></property>
    </bean>

    <!--  这里类似在学mybatis时，手动在代码里创建的sqlsessionfactory。只不过这里利用spring来管理了  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-spring-config.xml"></property>
        <property name="mapperLocations" value="classpath:com/huang/mapper/*.xml"></property>
    </bean>

    <!--  这里就相当于我们学习mybatis时，每一次查询数据库获取到的SqlSession  -->
    <bean id="sqlsession" class="org.mybatis.spring.SqlSessionTemplate">
        <!--   这里只能使用构造器注入，因为它没有set方法     -->
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
    </bean>
</beans>